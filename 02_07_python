import math

def f(x):
    return x**5 / math.sqrt(4 - x**2)

def simpson_integration(a, b, n):
    h = (b - a) / n
    sum_ = f(a) + f(b)
    
    for i in range(1, n):
        x = a + i * h
        sum_ += 4 * f(x) if i % 2 else 2 * f(x)
    
    return h * sum_ / 3

def adaptive_simpson(a, b, eps=1e-6, max_iter=1000):
    n = 2
    prev_result = simpson_integration(a, b, n)
    
    for _ in range(max_iter):
        n *= 2
        current_result = simpson_integration(a, b, n)
        
        if abs(current_result - prev_result) < eps:
            return current_result, n
        
        prev_result = current_result
    
    raise ValueError(f"Требуемая точность не достигнута за {max_iter} итераций")

# Параметры интегрирования
a = 0.0
b = 2.0 - 1e-10  # Чуть меньше 2, чтобы избежать деления на ноль
eps = 1e-6

try:
    result, n = adaptive_simpson(a, b, eps)
    print(f"Значение интеграла: {result:.8f}")
    print(f"Число разбиений: {n}")
    print(f"Достигнутая точность: {eps}")
except ValueError as e:
    print(e)
