import math
import numpy as np

def f(x):
    """Подынтегральная функция: e^(-2x) * sin(2x)"""
    return math.exp(-2 * x) * math.sin(2 * x)

def rectangle_infinite_integral(func, a, b_init, eps):
    """
    Вычисление бесконечного интеграла методом прямоугольников
    с адаптивным выбором верхнего предела
    """
    integral = 0.0
    prev_integral = 0.0
    b = b_init
    n = 4  # Начальное количество разбиений
    
    while True:
        prev_integral = integral
        integral = 0.0
        h = (b - a) / n
        
        # Используем средние прямоугольники (frac = 0.5)
        for i in range(n):
            x = a + (i + 0.5) * h
            integral += func(x)
        integral *= h
        
        # Проверка точности
        if abs(integral - prev_integral) < eps:
            break
            
        # Увеличиваем верхний предел и количество разбиений
        b *= 2
        n *= 2
    
    return integral

# Параметры интегрирования
a = 0.0          # Нижний предел
b_init = 1.0     # Начальный верхний предел
eps = 1e-6       # Требуемая точность

print("Вычисление интеграла ∫[0,∞] e^(-2x)sin(2x)dx методом прямоугольников")
print(f"Требуемая точность: {eps}")

result = rectangle_infinite_integral(f, a, b_init, eps)

print(f"Приближенное значение: {result:.8f}")
print("Точное значение: 0.2")
print(f"Погрешность: {abs(result - 0.2):.8f}")
