#include <iostream>
#include <cmath>
#include <iomanip>

using namespace std;

// Подынтегральная функция
double f(double x) {
    return pow(x, 5) / sqrt(4 - x*x);
}

// Метод Симпсона
double simpson_integration(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = f(a) + f(b);
    
    for (int i = 1; i < n; i++) {
        double x = a + i * h;
        sum += (i % 2 == 0) ? 2 * f(x) : 4 * f(x);
    }
    
    return h * sum / 3;
}

int main() {
    double a = 0.0;     // Нижний предел
    double b = 2.0;     // Верхний предел
    double eps = 1e-6;  // Требуемая точность
    int n = 2;          // Начальное число разбиений
    double prev_result, current_result;
    
    // Адаптивный алгоритм для достижения точности
    current_result = simpson_integration(a, b, n);
    do {
        prev_result = current_result;
        n *= 2;
        current_result = simpson_integration(a, b, n);
    } while (fabs(current_result - prev_result) > eps);
    
    cout << "Значение интеграла: " << setprecision(10) << current_result << endl;
    cout << "Число разбиений: " << n << endl;
    cout << "Точность: " << eps << endl;
    
    return 0;
}
