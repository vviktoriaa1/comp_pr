import math

def integrand(x):
    """Подынтегральная функция: 1/(x√(3x² - 2x - 1))"""
    denominator = x * math.sqrt(3 * x**2 - 2 * x - 1)
    return 1.0 / denominator if denominator != 0 else float('inf')

def rectangle_method(func, a, b, n):
    """Метод средних прямоугольников"""
    h = (b - a) / n
    total = 0.0
    
    for i in range(n):
        # Средняя точка каждого подынтервала
        x_mid = a + (i + 0.5) * h
        total += func(x_mid)
    
    return total * h

def adaptive_integration(func, a, b, eps=1e-6, max_iter=20):
    """Адаптивное интегрирование методом прямоугольников"""
    n = 4  # Начальное количество разбиений
    prev_result = 0.0
    result = rectangle_method(func, a, b, n)
    
    for _ in range(max_iter):
        if abs(result - prev_result) < eps:
            break
            
        prev_result = result
        n *= 2  # Удваиваем количество разбиений
        result = rectangle_method(func, a, b, n)
    
    return result

# Основные параметры
a = 1.0  # Нижний предел
b = 2.0  # Верхний предел
tolerance = 1e-6  # Требуемая точность

# Проверка на особенность в точке x=1
if not math.isfinite(integrand(a)):
    a += 1e-10  # Сдвигаем нижний предел для избежания особенности

print(f"Вычисление интеграла ∫₁² 1/(x√(3x²-2x-1)) dx методом прямоугольников")
print(f"Требуемая точность: {tolerance}")

# Вычисление интеграла
result = adaptive_integration(integrand, a, b, tolerance)

print(f"Приближенное значение интеграла: {result:.8f}")
